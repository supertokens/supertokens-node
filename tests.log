
> supertokens-node@19.0.0 test
> TEST_MODE=testing npx mocha --node-option no-experimental-fetch -r test/fetch-polyfill.mjs --timeout 500000



  auth-modes: [33;3;2m[test/auth-modes.test.js][0m
    with default getTokenTransferMethod
      createNewSession
        with default getTokenTransferMethod
          âœ” should default to header based session w/ no auth-mode header
          âœ” should default to header based session w/ bad auth-mode header
          âœ” should use headers if auth-mode specifies it
          âœ” should use cookies if auth-mode specifies it
        with user provided getTokenTransferMethod
          âœ” should use headers if getTokenTransferMethod returns any and there is no st-auth-mode header
          âœ” should use cookies if getTokenTransferMethod returns any and st-auth-mode is set to cookie
          âœ” should use headers if getTokenTransferMethod returns any and st-auth-mode is set to header
          âœ” should use headers if getTokenTransferMethod returns header
          âœ” should use clear cookies (if present) if getTokenTransferMethod returns header
          âœ” should use cookies if getTokenTransferMethod returns cookie
          âœ” should clear headers (if present) if getTokenTransferMethod returns cookie
      verifySession
        âœ” should reject requests with sIdRefreshToken
        from behaviour table
          âœ” should match line 1 with a valid token
          âœ” should match line 1 with a expired token
          âœ” should match line 2 with a valid token
          âœ” should match line 2 with a expired token
          âœ” should match line 3 with a valid token
          âœ” should match line 3 with a expired token
          âœ” should match line 4 with a valid token
          âœ” should match line 4 with a expired token
          âœ” should match line 5 with a valid token
          âœ” should match line 5 with a expired token
          âœ” should match line 6 with a valid token
          âœ” should match line 6 with a expired token
          âœ” should match line 7 with a valid token
          âœ” should match line 7 with a expired token
          âœ” should match line 8 with a valid token
          âœ” should match line 8 with a expired token (5002ms)
          âœ” should match line 9 with a valid token
          âœ” should match line 9 with a expired token
          âœ” should match line 10 with a valid token
          âœ” should match line 10 with a expired token
          âœ” should match line 11 with a valid token
          âœ” should match line 11 with a expired token (5374ms)
          âœ” should match line 12 with a valid token
          âœ” should match line 12 with a expired token
          âœ” should match line 13 with a valid token
          âœ” should match line 13 with a expired token
          âœ” should match line 14 with a valid token
          âœ” should match line 14 with a expired token
          âœ” should match line 15 with a valid token
          âœ” should match line 15 with a expired token
          âœ” should match line 16 with a valid token
          âœ” should match line 16 with a expired token
          âœ” should match line 17 with a valid token
          âœ” should match line 17 with a expired token
          âœ” should match line 18 with a valid token
          âœ” should match line 18 with a expired token
          âœ” should match line 19 with a valid token
          âœ” should match line 19 with a expired token
          âœ” should match line 20 with a valid token
          âœ” should match line 20 with a expired token
          âœ” should match line 21 with a valid token
          âœ” should match line 21 with a expired token
          âœ” should match line 22 with a valid token
          âœ” should match line 22 with a expired token
          âœ” should match line 23 with a valid token
          âœ” should match line 23 with a expired token
          âœ” should match line 24 with a valid token
          âœ” should match line 24 with a expired token
        with access tokens in both headers and cookies
          âœ” should use the value from headers if getTokenTransferMethod returns any
          âœ” should use the value from headers if getTokenTransferMethod returns header
          âœ” should use the value from cookies if getTokenTransferMethod returns cookie
        with non ST in Authorize header
          âœ” should use the value from cookies if present and getTokenTransferMethod returns any
          âœ” should reject with UNAUTHORISED if getTokenTransferMethod returns header
          âœ” should reject with UNAUTHORISED if cookies are not present
      mergeIntoAccessTokenPayload
        âœ” should update cookies if the session was cookie based
        âœ” should allow headers if the session was header based
      refreshSession
        from behaviour table
          âœ” should match line 1 with a valid token
          âœ” should match line 2 with a valid token
          âœ” should match line 3 with a valid token
          âœ” should match line 4 with a valid token
          âœ” should match line 5 with a valid token
          âœ” should match line 6 with a valid token
          âœ” should match line 7 with a valid token
          âœ” should match line 8 with a valid token
          âœ” should match line 9 with a valid token
          âœ” should match line 10 with a valid token
          âœ” should match line 11 with a valid token
          âœ” should match line 12 with a valid token
          âœ” should match line 1 with a invalid token
          âœ” should match line 2 with a invalid token
          âœ” should match line 3 with a invalid token
          âœ” should match line 4 with a invalid token
          âœ” should match line 5 with a invalid token
          âœ” should match line 6 with a invalid token
          âœ” should match line 7 with a invalid token
          âœ” should match line 8 with a invalid token
          âœ” should match line 9 with a invalid token
          âœ” should match line 10 with a invalid token
          âœ” should match line 11 with a invalid token
          âœ” should match line 12 with a invalid token

  configTest: [33;3;2m[test/config.test.js][0m
    âœ” test values for optional inputs for appInfo
    âœ” testing .local tld
    âœ” test values for compulsory inputs for appInfo
    âœ” test using zero, one and two recipe modules
    âœ” test config for session module
    âœ” various sameSite values
    âœ” sameSite none invalid domain values
    âœ” sameSite none valid domain values
    âœ” testing sessionScope normalisation
    âœ” testing URL path normalisation
    âœ” testing URL domain normalisation
    âœ” various config values











    âœ” testing that the debug mode is set











    âœ” testing that the debug mode is set via env var
    âœ” checking for default cookie config
    âœ” Test that the JWKS and OpenId endpoints are exposed by Session
    âœ” testing getTopLevelDomainForSameSiteResolution function
    âœ” should work well with ec2 public urls
    âœ” apiGatewayPath test
    âœ” checking for empty item in recipeList config
    âœ” Check that telemetry is set to true properly
    âœ” Check that telemetry is set to false by default
    âœ” Check that telemetry is set to false properly
    âœ” Test that init throws if both website domain and origin is undefined
    âœ” Test that init works fine when using origin
    âœ” Test that init works fine when using a function for origin
    âœ” Test that origin function returns correctly
    âœ” Test that if both website domain and origin are provided, origin is used

  dashboard: [33;3;2m[test/dashboard.test.js][0m
    âœ” Test that normalised config is generated correctly
    with account linking
      âœ” should get user info with first&last names
      âœ” should reset password of linked user
      âœ” should link accounts after verification
      âœ” should delete all linked users if removeAllLinkedAccounts is true
      âœ” should not delete all linked users if removeAllLinkedAccounts is false when deleting the primary user
      âœ” should not delete all linked users if removeAllLinkedAccounts is false when deleting the recipe user
    deleteUser
      âœ” should respond with error if userId is missing
      âœ” should respond with error if userId is empty
    userPut
      âœ” should respond with error if another user exists with the same email

  User Dashboard createOrUpdateThirdPartyConfig: [33;3;2m[test/dashboard/createOrUpdateThirdPartyConfig.test.js][0m
{"status":"OK","createdNew":true}
    âœ” Test that API creates a new third party config for the given tenant

  User Dashboard get: [33;3;2m[test/dashboard/dashboardGet.test.js][0m
    Test connectionURI
      âœ” Test connectionURI contains http protocol
      âœ” Test connectionURI contains https protocol
      âœ” Test multiple connection URIs

  User Dashboard deleteTenant: [33;3;2m[test/dashboard/deleteTenant.test.js][0m
    âœ” Test that API successfully deletes a tenant
    âœ” Test that API throws error when tenantId is missing

  User Dashboard deleteThirdPartyConfig: [33;3;2m[test/dashboard/deleteThirdPartyConfig.test.js][0m
    âœ” Test that API successfully deletes third party config for a tenant
    âœ” Test that API throws error when tenantId or thirdPartyId is missing

  User Dashboard getTenantInfo: [33;3;2m[test/dashboard/getTenantInfo.test.js][0m
    âœ” Test that API returns all the info for the given tenant id
    âœ” Test that API returns error if tenant does not exist
    âœ” Test that API returns public tenant if tenant id is not provided

  User Dashboard listTenants: [33;3;2m[test/dashboard/listTenants.test.js][0m
    âœ” Test that API returns all the tenants

  User Dashboard userEmailVerifyGet: [33;3;2m[test/dashboard/userEmailVerifyGet.test.js][0m
    âœ” Test that api returns correct value for email verification

  configTest: [33;3;2m[test/emailpassword/config.test.js][0m
    âœ” test default config for emailpassword module
    âœ” test config for emailpassword module
    âœ” test that no email/password validators given should add them
    âœ” test that giving optional true in email / password field should be ignored
    âœ” test that default password and email validators work fine

  deleteUser: [33;3;2m[test/emailpassword/deleteUser.test.js][0m
    âœ” test deleteUser

  emailDelivery: [33;3;2m[test/emailpassword/emailDelivery.test.js][0m
    âœ” test default backward compatibility api being called: reset password
    âœ” test default backward compatibility api being called, error message not sent back to user: reset password
    âœ” test backward compatibility: reset password
    âœ” test backward compatibility: reset password (non existent user) (5778ms)
    âœ” test custom override: reset password
    âœ” test smtp service: reset password
    âœ” test default backward compatibility api being called: email verify
    âœ” test default backward compatibility api being called, error message not sent back to user: email verify
    âœ” test backward compatibility: email verify
    âœ” test custom override: email verify
    âœ” test smtp service: email verify
    âœ” Test the reset password link
    âœ” Test the reset password link for invalid input
    âœ” test sendResetPasswordEmail
    âœ” test sendResetPasswordEmail: invalid input

  emailExists: [33;3;2m[test/emailpassword/emailExists.test.js][0m
    âœ” test good input, email exists with new path
    âœ” test that if disabling api, the default email exists API does not work
    âœ” test good input, email exists
    âœ” test good input, email does not exists
    âœ” test email exists a syntactically invalid email
    âœ” test sending an unnormalised email and you get exists is true
    âœ” test bad input, do not pass email
    âœ” test passing an array instead of a string in the email
    âœ” test good input, email exists, with bodyParser applied before
    âœ” test good input, email exists, with bodyParser applied after

  emailverify: [33;3;2m[test/emailpassword/emailverify.test.js][0m
    âœ” test the generate token api with valid input, email not verified
    âœ” test the generate token api with valid input, email verified and test error
    âœ” test the generate token api with valid input, no session and check output
    âœ” test the generate token api with an expired access token and see that try refresh token is returned (7820ms)
    âœ” test that providing your own email callback and make sure it is called
    âœ” test the email verify API with valid input
    âœ” test the email verify API with invalid token and check error
    âœ” test the email verify API with token of not type string
    âœ” test that the handlePostEmailVerification callback is called on successfull verification, if given
    âœ” test the email verify with valid input, using the get method
    âœ” test the email verify with no session, using the get method
    âœ” test the email verify with an expired access token, using the get method (7291ms)
    âœ” test the email verify API with valid input, overriding apis
    âœ” test the email verify API with valid input, overriding functions
    âœ” test the email verify API with valid input, overriding apis throws error
    âœ” test the email verify API with valid input, overriding functions throws error
    âœ” test the generate token api with valid input, and then remove token
    âœ” test the generate token api with valid input, verify and then unverify email
    âœ” test the email verify API with deleted user
    âœ” test that generate email verification token API updates session claims
    âœ” test that generate email verification token API updates session claims

  formFieldValidator: [33;3;2m[test/emailpassword/formFieldValidator.test.js][0m
    âœ” checking email validator
    âœ” checking password validator

  multitenancy: [33;3;2m[test/emailpassword/multitenancy.test.js][0m
    âœ” test recipe functions (5876ms)

  overrideTest: [33;3;2m[test/emailpassword/override.test.js][0m
    âœ” overriding functions tests
    âœ” overriding api tests
    âœ” overriding functions tests, throws error
    âœ” overriding api tests, throws error

  passwordreset: [33;3;2m[test/emailpassword/passwordreset.test.js][0m
    âœ” test email validation checks in generate token API
    âœ” test that generated password link is correct
    âœ” test password validation
    âœ” test token missing from input
    âœ” test invalid token input
    âœ” test valid token input and passoword has changed with email verification
    âœ” test valid token input and passoword has changed without email verification
