version: 2.1

orbs:
    continuation: circleci/continuation@0.1.2
    slack: circleci/slack@3.4.2
    jq: circleci/jq@2.2.0

parameters:
    force:
        type: boolean
        default: false
    cdi-core-map:
        type: string
        default: "{}"
    cdi-plugin-interface-map:
        type: string
        default: "{}"
    fdi-node-map:
        type: string
        default: "{}"
    fdi-auth-react-map:
        type: string
        default: "{}"
    fdi-website-map:
        type: string
        default: "{}"

jobs:
    test-dev-tag-as-not-passed:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        steps:
            - run: echo "Testing branch << pipeline.git.branch >>"
            - when:
                  condition:
                      matches:
                          pattern: "^[0-9]+\\.[0-9]+$" # X.Y branches
                          value: << pipeline.git.branch >>
                  steps:
                      - checkout
                      - run: (cd .circleci/ && ./markDevTagAsTestNotPassed.sh)
    test-unit:
        docker:
            - image: rishabhpoddar/supertokens_node_driver_testing_node_20
            - image: rishabhpoddar/oauth-server-cicd
        resource_class: large
        parameters:
            cdi-version:
                type: string
            fdi-version:
                type: string
        environment:
            MOCHA_FILE: ~/test_report/report_node-<< parameters.fdi-version >>.xml
        parallelism: 4
        steps:
            - checkout
            - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
            - run: apt-get install lsof
            - run: npm i -d --force
            - run: update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk-15.0.1/bin/java" 2
            - run: update-alternatives --install "/usr/bin/javac" "javac" "/usr/java/jdk-15.0.1/bin/javac" 2
            - run: (cd .circleci/ && ./doUnitTests.sh << parameters.cdi-version >>)
            - store_test_results:
                  path: ~/test_report/report_node-<< parameters.fdi-version >>.xml
            - slack/status
    test-backend-sdk-testing:
        docker:
            - image: rishabhpoddar/supertokens_node_driver_testing_node_20
            - image: rishabhpoddar/oauth-server-cicd
        resource_class: large
        parameters:
            cdi-version:
                type: string
            fdi-version:
                type: string
        environment:
            MOCHA_FILE: test_report/report_node-<< parameters.fdi-version >>.xml
        steps:
            - checkout
            - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
            - run: apt-get install lsof
            - run: npm i -d --force
            - run: update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk-15.0.1/bin/java" 2
            - run: update-alternatives --install "/usr/bin/javac" "javac" "/usr/java/jdk-15.0.1/bin/javac" 2
            - run: (cd .circleci/ && ./doBackendSDKTests.sh << parameters.cdi-version >> << parameters.fdi-version >>)
            - store_test_results:
                  path: test_report/report_node-<< parameters.fdi-version >>.xml
            - slack/status
    test-website:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
            - image: rishabhpoddar/oauth-server-cicd
        resource_class: large
        parameters:
            fdi-version:
                type: string
        environment:
            MOCHA_FILE: ~/test_report/report_node-<< parameters.fdi-version >>.xml
        parallelism: 4
        steps:
            - checkout
            - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
            - run: apt-get install lsof
            - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
            - run: npm i -d --force
            - run: update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk-15.0.1/bin/java" 2
            - run: update-alternatives --install "/usr/bin/javac" "javac" "/usr/java/jdk-15.0.1/bin/javac" 2
            - run: (cd .circleci/ && ./website.sh << parameters.fdi-version >>)
            - store_test_results:
                  path: ~/test_report/report_node-<< parameters.fdi-version >>.xml
            - slack/status
    test-authreact:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing_node_16
            - image: rishabhpoddar/oauth-server-cicd
        resource_class: large
        parameters:
            fdi-version:
                type: string
        environment:
            MOCHA_FILE: ~/test_report/report_node-<< parameters.fdi-version >>.xml
        parallelism: 4
        steps:
            - checkout
            - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
            - run: apt-get install lsof
            - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
            - run: npm i -d --force
            - run: update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk-15.0.1/bin/java" 2
            - run: update-alternatives --install "/usr/bin/javac" "javac" "/usr/java/jdk-15.0.1/bin/javac" 2
            - run: (cd .circleci/ && ./authReact.sh << parameters.fdi-version >>)
            - store_artifacts:
                  path: ~/test_report/backend.log
                  destination: logs
            - store_artifacts:
                  path: ~/test_report/screenshots
                  destination: screenshots
            - store_artifacts:
                  path: ~/test_report/react-logs
                  destination: react-logs
            - store_test_results:
                  path: ~/test_report/report_node-<< parameters.fdi-version >>.xml
            - slack/status
    test-success:
        docker:
            - image: rishabhpoddar/supertokens_website_sdk_testing
        steps:
            - run: echo "Testing passed for branch << pipeline.git.branch >>"
            - when:
                  condition:
                      matches:
                          pattern: "^[0-9]+\\.[0-9]+$" # X.Y branches
                          value: << pipeline.git.branch >>
                  steps:
                      - checkout
                      - run: (cd .circleci/ && ./markAsSuccess.sh)
                      - slack/status

workflows:
    version: 2
    tagged-build:
        jobs:
            - test-dev-tag-as-not-passed:
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          only: /test-cicd\/.*/
            - test-unit:
                  requires:
                      - test-dev-tag-as-not-passed
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          only: /test-cicd\/.*/
                  matrix:
                      parameters:
                          cdi-version: placeholder
                          fdi-version: placeholder
            - test-backend-sdk-testing:
                  requires:
                      - test-dev-tag-as-not-passed
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          only: /test-cicd\/.*/
                  matrix:
                      parameters:
                          cdi-version: placeholder
                          fdi-version: placeholder
            - test-website:
                  requires:
                      - test-dev-tag-as-not-passed
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          only: /test-cicd\/.*/
                  matrix:
                      parameters:
                          fdi-version: placeholder
            - test-authreact:
                  requires:
                      - test-dev-tag-as-not-passed
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          only: /test-cicd\/.*/
                  matrix:
                      parameters:
                          fdi-version: placeholder
            - test-success:
                  requires:
                      - test-unit
                      - test-backend-sdk-testing
                      - test-website
                      - test-authreact
                  context:
                      - slack-notification
                  filters:
                      tags:
                          only: /dev-v[0-9]+(\.[0-9]+)*/
                      branches:
                          ignore: /.*/
